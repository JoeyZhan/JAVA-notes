/*
	抽象类(abstract)总结：
	
	抽象类的由来
		    利用抽象类是为了更好的对类加以分类，就如同人类不但给各种具体植物取了名字，
		还发明了“植物”这个抽象的词对所有具体植物进行归类一样；
		
		Java用来模拟现实世界，所以也存在抽象类；
		
		抽象类通常用来作为一个 类族的最顶层的 父类，用最底层的类表示现实中的具体事物，用最顶层的类表示该类族所有事物的共性；
	
	抽象方法(TestAbs_1.java)
		1.在定义Java方法时可以只给出方法头，而不给出方法内部实现代码，这样的方法成为抽象方法；
		
		2.凡是没有 方法体 的方法必须使用关键字 abstract 修饰为抽象方法；
		
		3.凡是含有抽象方法的类都必须的声明为抽象类；
	
	抽象类(TestAbs_1.java)
		1.用 abstract 关键字来修饰一个类时，该类叫做抽象类；
		
		2.包含抽象方法的类必须声明为抽象类；
		
		3.但是一个抽象类中却可以不包括任何抽象方法，尽管比较少见；
		
		4.抽象类不一定有抽象方法；
		
		5.有抽象方法的一定是抽象类
		
		6.不能 new 出抽象类对象，但可以定义一个抽象类的引用；(TestAbs_2.java)
		
	抽象类实现多态【重点】(TestAbs_2.java)
		我们可以把一个 子类对象 的地址 赋给 抽象类 的引用，然后通过抽象类的引用调用子类从父类继承过来的方法；
	
*/
















