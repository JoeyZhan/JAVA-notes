/*
	多态的用法_2
	
*/

class A
{
	
}

class B extends A
{
	
}

public class TestPoly_2
{
	public static void main(String[] args)
	{
		A aa_1 = new A();
		B bb_1 = new B();
		//bb_1 = aa_1;	//error;
		//bb_1 = (B)aa_1;	//强制转换，语法编译没有错误，但运行时会出错；
						    //因为aa_1指向的是父类对象，这样强制转换会出错；
							
		A aa_2 = new B();
		//bb_1 = aa_2;	//error 永远不可以把父类引用直接赋给子类引用；
		bb_1 = (B)aa_2;		//ok  因为aa_2本身指向的就是一个B类对象，所以可以进行强制转换；
							//注意与上面(23行)的区别，如果父类引用指向的是一个子类对象，则可以通过 强制类型转换 把父类引用 强制转换为 子类引用；
							//注意必须强制转换，在java 中 无论如何绝对不可能 直接 把父类引用直接赋给子类引用；
	}
}

/*
	2018-04-02 16:45:15
	
	体会：强制转换只有在 父类引用指向的是一个子类对象时，才可以使用；
*/